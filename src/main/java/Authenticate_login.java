
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import static com.kingaspx.firebase.util.Common.initFirebase;
import java.awt.Component;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author KAU
 */
public class Authenticate_login extends javax.swing.JFrame {

    private DatabaseReference mDatabase_for_ID;
    private DatabaseReference mDatabase_for_privilage;
    private DatabaseReference mDatabase_for_password;
    private DatabaseReference mDatabase_for_phone_number;
    private DatabaseReference mDatabase_for_Fname;
    private DatabaseReference mDatabase_for_Lname;

    private static Account acc;
    private static Account temp_account;

    /**
     * Creates new form NewJFrame
     */
    public Authenticate_login() throws IOException {
        initComponents();
        initFirebase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PasswordField1 = new javax.swing.JPasswordField();
        Button1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextField1.setText("Enter Number please");
        TextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("User ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Password:");

        Button1.setText("Login");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(Button1)
                .addGap(28, 28, 28))
        );

        jLabel4.setIcon(new javax.swing.ImageIcon("E:\\downloads from chrome\\Traffic_Control_System_CPIT-499\\Photos\\traffic logo v2.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String check_account(String password, String user_id) throws InterruptedException {
        temp_account = new Account();
        temp_account.setPassword("0");
        mDatabase_for_ID = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/account_ID");
        mDatabase_for_password = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/password");
        mDatabase_for_privilage = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/priv");
        mDatabase_for_phone_number = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/phone_number");
        mDatabase_for_Fname = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/first_name");
        mDatabase_for_Lname = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/last_name");

        mDatabase_for_ID.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                temp_account.setAccount_ID(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_password.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                temp_account.setPassword(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_privilage.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                temp_account.setPriv(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_phone_number.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                temp_account.setPhone_number(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_Fname.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                temp_account.setFirst_name(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_Lname.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                temp_account.setLast_name(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        Thread.sleep(6000);
       
        try {
            if (temp_account.getAccount_ID().equals(user_id) && temp_account.getPassword().equals(password)) {
                return "11";
            } else if (!temp_account.getAccount_ID().equals(user_id) && temp_account.getPassword().equals(password)) {
                return "01";
            } else if (temp_account.getAccount_ID().equals(user_id) && !temp_account.getPassword().equals(password)) {
                return "10";
            }

        } catch (Exception e) {
            return "00";
        }
        return "00";

    }

    public void authenticate_login(String user_id, String password) throws InterruptedException {
        //read_value(user_id);

        String result_from_database = check_account(password, user_id);

        if (result_from_database.equals("11")) {
            if (temp_account.getPriv().equals("1111")) {
                Main_menu_admin menu = new Main_menu_admin(temp_account);
                menu.setVisible(true);
                this.setVisible(false);
            } else if (temp_account.getPriv().charAt(2) == '1' || temp_account.getPriv().charAt(3) == '1') {
                Main_menu_operator menu = new Main_menu_operator(temp_account);
                menu.setVisible(true);
                this.setVisible(false);
            }
        } else if (result_from_database.equals("01")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame,
                    "Your user ID is wrong...",
                    "Wrong input",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        } else if (result_from_database.equals("10")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame,
                    "Your password is wrong...",
                    "Wrong input",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(0);

        } else if (result_from_database.equals("00")) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame,
                    "Connection went wrong...",
                    "Try again please",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }

    }

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed

        try {
            authenticate_login(TextField1.getText(), PasswordField1.getText());

        } catch (InterruptedException ex) {
            Component frame = null;
            JOptionPane.showMessageDialog(frame,
                    "Something went wrong...",
                    "Try again please",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }//GEN-LAST:event_Button1ActionPerformed

    private void TextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authenticate_login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authenticate_login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authenticate_login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authenticate_login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Authenticate_login().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Authenticate_login.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button1;
    private javax.swing.JPasswordField PasswordField1;
    private javax.swing.JTextField TextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
