
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author KAU
 */
public class Edit_account extends javax.swing.JFrame {

    private DatabaseReference mDatabase_for_ID;
    private DatabaseReference mDatabase_for_privilage;
    private DatabaseReference mDatabase_for_password;
    private DatabaseReference mDatabase_for_phone_number;
    private DatabaseReference mDatabase_for_Fname;
    private DatabaseReference mDatabase_for_Lname;
    static Account temp_account, record;
    private Account acc;

    /**
     * Creates new form Edit_account
     */
    public Edit_account() {
        initComponents();
    }

    public Edit_account(Account temp_account) {
        initComponents();
        Edit_account.temp_account = temp_account;
        jLabel2.setText("User ID: " + temp_account.getAccount_ID());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter User ID to edit:");

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Main_menu_admin menu = new Main_menu_admin(temp_account);
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            Check_for_duplicate_userID(jTextField1.getText());
        } catch (InterruptedException ex) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public boolean check_userID(String user_id) throws InterruptedException {
        record = new Account();
//        record.setAccount_ID("0");
        mDatabase_for_ID = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/account_ID");
        mDatabase_for_password = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/password");
        mDatabase_for_privilage = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/priv");
        mDatabase_for_phone_number = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/phone_number");
        mDatabase_for_Fname = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/first_name");
        mDatabase_for_Lname = FirebaseDatabase.getInstance().getReference().child("Database/accounts/" + user_id + "/last_name");

        mDatabase_for_ID.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                record.setAccount_ID(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_password.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                record.setPassword(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_privilage.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                record.setPriv(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_phone_number.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                record.setPhone_number(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_Fname.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                record.setFirst_name(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        mDatabase_for_Lname.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot ds) {
                // Get Post object and use the values to update the UI

                // temp_userID = ds.getChildren().toString();
                record.setLast_name(ds.getValue(String.class));
                // ...
            }

            @Override
            public void onCancelled(DatabaseError de) {

            }
        });
        Thread.sleep(6000);
        System.out.println("yours user ID: " + temp_account.getAccount_ID());
        System.out.println("yours password: " + temp_account.getPassword());
        System.out.println("yours privilage: " + temp_account.getPriv());
        System.out.println("yours phone number: " + temp_account.getPhone_number());
        System.out.println("yours full name: " + temp_account.getFirst_name() + " " + temp_account.getLast_name());
        if (record.getAccount_ID() == null) {
            return false;
        } else if (record.getAccount_ID().equals(user_id)) {
            return true;
        } else {
            return false;
        }
    }

    public void Check_for_duplicate_userID(String user_id) throws InterruptedException {
        //read_value(user_id);

        if (check_userID(user_id)) {
            Edit_account_after_access e = new Edit_account_after_access(record , temp_account);
            e.setVisible(true);
            this.setVisible(false);
        } else {
            Component frame = null;
            JOptionPane.showMessageDialog(frame,
                    "This ID "+jTextField1.getText()+" is not exist",
                    "ID not found",
                    JOptionPane.ERROR_MESSAGE);

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit_account().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
